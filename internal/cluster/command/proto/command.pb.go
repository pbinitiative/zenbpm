// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v5.29.2
// source: command.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Role int32

const (
	Role_ROLE_TYPE_UNKNOWN  Role = 0
	Role_ROLE_TYPE_FOLLOWER Role = 1
	Role_ROLE_TYPE_LEADER   Role = 2
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0: "ROLE_TYPE_UNKNOWN",
		1: "ROLE_TYPE_FOLLOWER",
		2: "ROLE_TYPE_LEADER",
	}
	Role_value = map[string]int32{
		"ROLE_TYPE_UNKNOWN":  0,
		"ROLE_TYPE_FOLLOWER": 1,
		"ROLE_TYPE_LEADER":   2,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_command_proto_enumTypes[0].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_command_proto_enumTypes[0]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{0}
}

type NodeState int32

const (
	NodeState_NODE_STATE_UNKNOWN  NodeState = 0
	NodeState_NODE_STATE_STARTING NodeState = 1
	NodeState_NODE_STATE_STARTED  NodeState = 2
	NodeState_NODE_STATE_ERROR    NodeState = 3
)

// Enum value maps for NodeState.
var (
	NodeState_name = map[int32]string{
		0: "NODE_STATE_UNKNOWN",
		1: "NODE_STATE_STARTING",
		2: "NODE_STATE_STARTED",
		3: "NODE_STATE_ERROR",
	}
	NodeState_value = map[string]int32{
		"NODE_STATE_UNKNOWN":  0,
		"NODE_STATE_STARTING": 1,
		"NODE_STATE_STARTED":  2,
		"NODE_STATE_ERROR":    3,
	}
)

func (x NodeState) Enum() *NodeState {
	p := new(NodeState)
	*p = x
	return p
}

func (x NodeState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeState) Descriptor() protoreflect.EnumDescriptor {
	return file_command_proto_enumTypes[1].Descriptor()
}

func (NodeState) Type() protoreflect.EnumType {
	return &file_command_proto_enumTypes[1]
}

func (x NodeState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeState.Descriptor instead.
func (NodeState) EnumDescriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{1}
}

type NodePartitionState int32

const (
	NodePartitionState_NODE_PARTITION_STATE_UNKNOWN      NodePartitionState = 0
	NodePartitionState_NODE_PARTITION_STATE_ERROR        NodePartitionState = 1
	NodePartitionState_NODE_PARTITION_STATE_JOINING      NodePartitionState = 2
	NodePartitionState_NODE_PARTITION_STATE_LEAVING      NodePartitionState = 3
	NodePartitionState_NODE_PARTITION_STATE_INITIALIZING NodePartitionState = 4
	NodePartitionState_NODE_PARTITION_STATE_INITIALIZED  NodePartitionState = 5
)

// Enum value maps for NodePartitionState.
var (
	NodePartitionState_name = map[int32]string{
		0: "NODE_PARTITION_STATE_UNKNOWN",
		1: "NODE_PARTITION_STATE_ERROR",
		2: "NODE_PARTITION_STATE_JOINING",
		3: "NODE_PARTITION_STATE_LEAVING",
		4: "NODE_PARTITION_STATE_INITIALIZING",
		5: "NODE_PARTITION_STATE_INITIALIZED",
	}
	NodePartitionState_value = map[string]int32{
		"NODE_PARTITION_STATE_UNKNOWN":      0,
		"NODE_PARTITION_STATE_ERROR":        1,
		"NODE_PARTITION_STATE_JOINING":      2,
		"NODE_PARTITION_STATE_LEAVING":      3,
		"NODE_PARTITION_STATE_INITIALIZING": 4,
		"NODE_PARTITION_STATE_INITIALIZED":  5,
	}
)

func (x NodePartitionState) Enum() *NodePartitionState {
	p := new(NodePartitionState)
	*p = x
	return p
}

func (x NodePartitionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodePartitionState) Descriptor() protoreflect.EnumDescriptor {
	return file_command_proto_enumTypes[2].Descriptor()
}

func (NodePartitionState) Type() protoreflect.EnumType {
	return &file_command_proto_enumTypes[2]
}

func (x NodePartitionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodePartitionState.Descriptor instead.
func (NodePartitionState) EnumDescriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{2}
}

type Command_Type int32

const (
	Command_TYPE_UNKNOWN               Command_Type = 0
	Command_TYPE_NOOP                  Command_Type = 1
	Command_TYPE_NODE_CHANGE           Command_Type = 2
	Command_TYPE_NODE_PARTITION_CHANGE Command_Type = 3
)

// Enum value maps for Command_Type.
var (
	Command_Type_name = map[int32]string{
		0: "TYPE_UNKNOWN",
		1: "TYPE_NOOP",
		2: "TYPE_NODE_CHANGE",
		3: "TYPE_NODE_PARTITION_CHANGE",
	}
	Command_Type_value = map[string]int32{
		"TYPE_UNKNOWN":               0,
		"TYPE_NOOP":                  1,
		"TYPE_NODE_CHANGE":           2,
		"TYPE_NODE_PARTITION_CHANGE": 3,
	}
)

func (x Command_Type) Enum() *Command_Type {
	p := new(Command_Type)
	*p = x
	return p
}

func (x Command_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Command_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_command_proto_enumTypes[3].Descriptor()
}

func (Command_Type) Type() protoreflect.EnumType {
	return &file_command_proto_enumTypes[3]
}

func (x Command_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Command_Type.Descriptor instead.
func (Command_Type) EnumDescriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{0, 0}
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Command_Type `protobuf:"varint,1,opt,name=type,proto3,enum=command.Command_Type" json:"type,omitempty"`
	// Types that are assignable to Request:
	//	*Command_NodeChange
	//	*Command_NodePartitionChange
	Request isCommand_Request `protobuf_oneof:"request"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{0}
}

func (x *Command) GetType() Command_Type {
	if x != nil {
		return x.Type
	}
	return Command_TYPE_UNKNOWN
}

func (m *Command) GetRequest() isCommand_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *Command) GetNodeChange() *NodeChange {
	if x, ok := x.GetRequest().(*Command_NodeChange); ok {
		return x.NodeChange
	}
	return nil
}

func (x *Command) GetNodePartitionChange() *NodePartitionChange {
	if x, ok := x.GetRequest().(*Command_NodePartitionChange); ok {
		return x.NodePartitionChange
	}
	return nil
}

type isCommand_Request interface {
	isCommand_Request()
}

type Command_NodeChange struct {
	NodeChange *NodeChange `protobuf:"bytes,2,opt,name=node_change,json=nodeChange,proto3,oneof"`
}

type Command_NodePartitionChange struct {
	NodePartitionChange *NodePartitionChange `protobuf:"bytes,3,opt,name=node_partition_change,json=nodePartitionChange,proto3,oneof"`
}

func (*Command_NodeChange) isCommand_Request() {}

func (*Command_NodePartitionChange) isCommand_Request() {}

type NodeChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId       string    `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`                     // node which changed
	PrivGrpcAddr string    `protobuf:"bytes,2,opt,name=priv_grpc_addr,json=privGrpcAddr,proto3" json:"priv_grpc_addr,omitempty"` // address of the private GRPC endpoint
	State        NodeState `protobuf:"varint,3,opt,name=state,proto3,enum=command.NodeState" json:"state,omitempty"`
	Role         Role      `protobuf:"varint,4,opt,name=role,proto3,enum=command.Role" json:"role,omitempty"`
}

func (x *NodeChange) Reset() {
	*x = NodeChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeChange) ProtoMessage() {}

func (x *NodeChange) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeChange.ProtoReflect.Descriptor instead.
func (*NodeChange) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{1}
}

func (x *NodeChange) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeChange) GetPrivGrpcAddr() string {
	if x != nil {
		return x.PrivGrpcAddr
	}
	return ""
}

func (x *NodeChange) GetState() NodeState {
	if x != nil {
		return x.State
	}
	return NodeState_NODE_STATE_UNKNOWN
}

func (x *NodeChange) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_ROLE_TYPE_UNKNOWN
}

type NodePartitionChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId      string             `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`                 // node which changed
	PartitionId uint32             `protobuf:"varint,2,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"` // partition id which changed on node
	State       NodePartitionState `protobuf:"varint,3,opt,name=state,proto3,enum=command.NodePartitionState" json:"state,omitempty"`
	Role        Role               `protobuf:"varint,4,opt,name=role,proto3,enum=command.Role" json:"role,omitempty"`
}

func (x *NodePartitionChange) Reset() {
	*x = NodePartitionChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodePartitionChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePartitionChange) ProtoMessage() {}

func (x *NodePartitionChange) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePartitionChange.ProtoReflect.Descriptor instead.
func (*NodePartitionChange) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{2}
}

func (x *NodePartitionChange) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodePartitionChange) GetPartitionId() uint32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

func (x *NodePartitionChange) GetState() NodePartitionState {
	if x != nil {
		return x.State
	}
	return NodePartitionState_NODE_PARTITION_STATE_UNKNOWN
}

func (x *NodePartitionChange) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_ROLE_TYPE_UNKNOWN
}

var File_command_proto protoreflect.FileDescriptor

var file_command_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xaa, 0x02, 0x0a, 0x07, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x36, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x6f, 0x64,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x52, 0x0a, 0x15, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x13, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x5d, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f,
	0x4f, 0x50, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x44,
	0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x03, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x70, 0x72, 0x69, 0x76, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x76, 0x47, 0x72, 0x70, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x22, 0xa7, 0x01, 0x0a, 0x13, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x2a, 0x4b, 0x0a, 0x04, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x4f, 0x4c,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c,
	0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x02, 0x2a, 0x6a, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13,
	0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a,
	0x10, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x03, 0x2a, 0xe7, 0x01, 0x0a, 0x12, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x4f,
	0x44, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a,
	0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c,
	0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x20,
	0x0a, 0x1c, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x03,
	0x12, 0x25, 0x0a, 0x21, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c,
	0x49, 0x5a, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x24, 0x0a, 0x20, 0x4e, 0x4f, 0x44, 0x45, 0x5f,
	0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x05, 0x42, 0x3f, 0x5a,
	0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x62, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2f, 0x7a, 0x65, 0x6e, 0x62, 0x70, 0x6d, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_command_proto_rawDescOnce sync.Once
	file_command_proto_rawDescData = file_command_proto_rawDesc
)

func file_command_proto_rawDescGZIP() []byte {
	file_command_proto_rawDescOnce.Do(func() {
		file_command_proto_rawDescData = protoimpl.X.CompressGZIP(file_command_proto_rawDescData)
	})
	return file_command_proto_rawDescData
}

var file_command_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_command_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_command_proto_goTypes = []interface{}{
	(Role)(0),                   // 0: command.Role
	(NodeState)(0),              // 1: command.NodeState
	(NodePartitionState)(0),     // 2: command.NodePartitionState
	(Command_Type)(0),           // 3: command.Command.Type
	(*Command)(nil),             // 4: command.Command
	(*NodeChange)(nil),          // 5: command.NodeChange
	(*NodePartitionChange)(nil), // 6: command.NodePartitionChange
}
var file_command_proto_depIdxs = []int32{
	3, // 0: command.Command.type:type_name -> command.Command.Type
	5, // 1: command.Command.node_change:type_name -> command.NodeChange
	6, // 2: command.Command.node_partition_change:type_name -> command.NodePartitionChange
	1, // 3: command.NodeChange.state:type_name -> command.NodeState
	0, // 4: command.NodeChange.role:type_name -> command.Role
	2, // 5: command.NodePartitionChange.state:type_name -> command.NodePartitionState
	0, // 6: command.NodePartitionChange.role:type_name -> command.Role
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_command_proto_init() }
func file_command_proto_init() {
	if File_command_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_command_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodePartitionChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_command_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Command_NodeChange)(nil),
		(*Command_NodePartitionChange)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_command_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_command_proto_goTypes,
		DependencyIndexes: file_command_proto_depIdxs,
		EnumInfos:         file_command_proto_enumTypes,
		MessageInfos:      file_command_proto_msgTypes,
	}.Build()
	File_command_proto = out.File
	file_command_proto_rawDesc = nil
	file_command_proto_goTypes = nil
	file_command_proto_depIdxs = nil
}
