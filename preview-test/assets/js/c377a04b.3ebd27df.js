"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[361],{2939:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"index","title":"ZenBPM - Go BPMN Engine","description":"ZenBPM is a Business Process Management (BPM) engine written in Go, designed to execute BPMN 2.0 process definitions. It provides a robust platform for defining, deploying, and executing business processes.","source":"@site/docs/index.md","sourceDirName":".","slug":"/","permalink":"/zenbpm/preview-test/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docs","next":{"title":"Tutorials","permalink":"/zenbpm/preview-test/category/tutorials"}}');var r=s(4848),t=s(8453);const l={sidebar_position:1},c="ZenBPM - Go BPMN Engine",a={},o=[{value:"What is BPMN?",id:"what-is-bpmn",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Installation",id:"installation",level:3},{value:"Docker",id:"docker",level:3},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Architecture",id:"architecture",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"Development",id:"development",level:2},{value:"License",id:"license",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"zenbpm---go-bpmn-engine",children:"ZenBPM - Go BPMN Engine"})}),"\n",(0,r.jsx)(n.p,{children:"ZenBPM is a Business Process Management (BPM) engine written in Go, designed to execute BPMN 2.0 process definitions. It provides a robust platform for defining, deploying, and executing business processes."}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,r.jsx)(n.strong,{children:"Warning"}),": This project is in early stages and is not suitable for production use yet."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"what-is-bpmn",children:"What is BPMN?"}),"\n",(0,r.jsx)(n.p,{children:"Business Process Model and Notation (BPMN) is a graphical representation for specifying business processes in a business process model. It provides businesses with a standard notation that is readily understandable by all business stakeholders."}),"\n",(0,r.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"BPMN 2.0 Support"}),": Execute standard BPMN 2.0 process definitions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"REST API"}),": Comprehensive REST API for process management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"gRPC Interface"}),": High-performance gRPC interface for system integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Distributed Architecture"}),": Support for clustering and distributed execution"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Process Elements Support"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Start and End Events"}),"\n",(0,r.jsx)(n.li,{children:"Service Tasks"}),"\n",(0,r.jsx)(n.li,{children:"User Tasks"}),"\n",(0,r.jsx)(n.li,{children:"Exclusive Gateways"}),"\n",(0,r.jsx)(n.li,{children:"Inclusive Gateways"}),"\n",(0,r.jsx)(n.li,{children:"Parallel Gateways"}),"\n",(0,r.jsx)(n.li,{children:"Event-Based Gateways"}),"\n",(0,r.jsx)(n.li,{children:"Intermediate Catch and Throw Events"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Persistence"}),": Durable state storage using rqlite"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Observability"}),": Integrated with OpenTelemetry for tracing and metrics"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,r.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Clone the repository\ngit clone <REPO_URL>\n\n# Start application\ncd zenbpm\nmake run\n\n# Run tests\nmake test\n"})}),"\n",(0,r.jsx)(n.h3,{id:"docker",children:"Docker"}),"\n",(0,r.jsx)(n.p,{children:"You can run ZenBPM in a Docker container:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker build -t zenbpm .\ndocker run -p 8080:8080 -p 4001:4001 zenbpm\n"})}),"\n",(0,r.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Deploy a process definition"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl -X 'POST' \\\n  'http://localhost:8080/v1/process-definitions' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/xml' \\\n  -d '<BPMN_XML_DEFINITION>'\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Start a process instance"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl -X 'POST' \\\n  'http://localhost:8080/v1/process-instances' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"processDefinitionKey\": \"<PROCESS_DEFINITION_KEY>\",\n  \"variables\": {\"key\": \"value\"}\n}'\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Check process instance status"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl -X 'GET' \\\n  'http://localhost:8080/v1/process-instances/<PROCESS_INSTANCE_KEY>' \\\n  -H 'accept: application/json'\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,r.jsx)(n.p,{children:"ZenBPM is built with a modular architecture:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Core Engine"}),": Handles process execution logic"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Storage Layer"}),": Manages persistence of process state"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"API Layer"}),": Provides REST and gRPC interfaces"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cluster Management"}),": Coordinates distributed execution"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,r.jsx)(n.p,{children:"ZenBPM provides both REST and gRPC APIs:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"REST API"}),": Documented in OpenAPI format at ",(0,r.jsx)(n.a,{href:"/zenbpm/preview-test/openapi",children:"openapi/api.yaml"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"gRPC API"}),": Defined in Protocol Buffers format"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,r.jsxs)(n.p,{children:["For development guidelines and contribution information, see ",(0,r.jsx)(n.a,{href:"/zenbpm/preview-test/",children:"DEVELOPMENT.md"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,r.jsxs)(n.p,{children:["This project is licensed under the terms specified in the ",(0,r.jsx)(n.a,{href:"/zenbpm/preview-test/",children:"LICENSE"})," file."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var i=s(6540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);